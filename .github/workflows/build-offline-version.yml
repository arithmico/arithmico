name: "build offline version"
on:
  workflow_dispatch:
    inputs:
      commitHash:
        type: string
        required: true
        description: "commit hash"

      artifactPath:
        type: string
        required: true
        description: "artifact path"

      engineFeatures:
        type: string
        required: false
        description: "engine features"

      webhookUrl:
        type: string
        required: false
        description: "webhook url"

      webhookToken:
        type: string
        required: false
        description: "webhook token"

jobs:
  build-offline-version:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-22.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    env:
      ARITHMICO_FEATURES: ${{ inputs.engineFeatures }}
      WEBHOOK_URL: ${{ inputs.webhookUrl }}
      WEBHOOK_TOKEN: ${{ inputs.webhookToken }}
      BUCKET_ID: ${{ secrets.CDN_BUCKET }}

    steps:
      - uses: actions/checkout@v4
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: create platform build job
        shell: bash
        env:
          PLATFORM: ${{ matrix.platform }}
        run: |
          if [[ "$PLATFORM" == "ubuntu-24.04" ]]; then 
            export PLATFORM_NAME="linux"
          elif [[ "$PLATFORM" == "macos-latest" ]]; then
            export PLATFORM_NAME="macos"
          elif [[ "$PLATFORM" == "windows-latest" ]]; then
            export PLATFORM_NAME="windows"
          fi
          curl -X POST $WEBHOOK_URL \
          -H 'Content-Type: application/json' \
          -d '{"platform": "'$PLATFORM_NAME'", "webhookToken": "'$WEBHOOK_TOKEN'"}'

      - name: install frontend dependencies
        run: |
          node --version
          npm --version
          npm ci
          npx --no nx run calculator:build

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-24.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      - name: build offline version
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: "packages/applications/calculator"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: upload artefact
        shell: bash
        env:
          PLATFORM: ${{ matrix.platform }}
          ARTIFACT_PATH: ${{ inputs.artifactPath }}
        run: |
          if [[ "$PLATFORM" == "ubuntu-24.04" ]]; then 
            PLATFORM_NAME="linux"
            FROM_PATH="./packages/applications/calculator/src-tauri/target/release/bundle/deb/arithmico-calculator_0.1.0_amd64.deb"
            FILE_SUFFIX=".deb"
          elif [[ "$PLATFORM" == "macos-latest" ]]; then
            PLATFORM_NAME="macos"
            FROM_PATH="./packages/applications/calculator/src-tauri/target/release/bundle/dmg/Arithmico Calculator_0.1.0_aarch64.dmg"
            FILE_SUFFIX=".dmg"
          elif [[ "$PLATFORM" == "windows-latest" ]]; then
            PLATFORM_NAME="windows"
            FROM_PATH="./packages/applications/calculator/src-tauri/target/release/bundle/nsis/Arithmico Calculator_0.1.0_x64-setup.exe"
            FILE_SUFFIX=".exe"
          fi
          echo PLATFORM_NAME=$PLATFORM_NAME
          echo FROM_PATH=$FROM_PATH
          echo FILE_SUFFIX=$FILE_SUFFIX
          DEST_PATH="s3://"$BUCKET_ID/$ARTIFACT_PATH$FILE_SUFFIX
          ARTIFACT_URL=$ARTIFACT_PATH$FILE_SUFFIX
          aws s3 cp "$FROM_PATH" $DEST_PATH
          curl -X PUT $WEBHOOK_URL \
          -H 'Content-Type: application/json' \
          -d '{"platform": "'$PLATFORM_NAME'", "webhookToken": "'$WEBHOOK_TOKEN'", "status": "succeeded", "artifactUrl": "'$ARTIFACT_URL'"}'

      - name: set platform build job to failed
        if: ${{ failure() }}
        shell: bash
        env:
          PLATFORM: ${{ matrix.platform }}
        run: |
          if [[ "$PLATFORM" == "ubuntu-24.04" ]]; then 
            export PLATFORM_NAME="linux"
          elif [[ "$PLATFORM" == "macos-latest" ]]; then
            export PLATFORM_NAME="macos"
          elif [[ "$PLATFORM" == "windows-latest" ]]; then
            export PLATFORM_NAME="windows"
          fi
          curl -X PUT $WEBHOOK_URL \
          -H 'Content-Type: application/json' \
          -d '{"platform": "'$PLATFORM_NAME'", "webhookToken": "'$WEBHOOK_TOKEN'", "status": "failed"}'
