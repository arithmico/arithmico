on:
  push:
    tags:
      - "v[0-9]*.[0-9]*.[0-9]*"
  workflow_dispatch: {}

name: build and upload

env:
  CI: true

jobs:
  test-all:
    runs-on: ubuntu-latest
    name: test all packages
    steps:
      - uses: actions/checkout@v3
        name: checkout

      - name: install dependencies
        shell: bash
        run: |
          npm ci

      - name: test all packages
        shell: bash
        run: |
          npx --no nx run-many -t test

  get-version-tag:
    needs: test-all
    runs-on: ubuntu-latest
    name: get version tag
    outputs:
      tag: ${{ steps.get-tag.outputs.tag }}
    steps:
      - name: parse git ref to tag
        id: get-tag
        shell: bash
        run: |
          TAG="${GITHUB_REF/refs\/tags\//""}"
          TAG="${TAG/refs\/heads\//""}"
          export TAG="${TAG/\//_}"
          echo "Tag is $TAG"
          echo "tag=$TAG" >> $GITHUB_OUTPUT

  build-api:
    needs: get-version-tag
    runs-on: ubuntu-latest
    name: build api
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: eu-central-1
    steps:
      - uses: actions/checkout@v3
        name: checkout

      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: login to amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: build, tag, and push docker image to amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: arithmico-api
          IMAGE_TAG: ${{ needs.get-version-tag.outputs.tag }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -f ./Dockerfile.api .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

  build-blog:
    needs: get-version-tag
    name: build blog
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/actions/build-frontend
        with:
          BUCKET_ID: ${{ secrets.ARTIFACTS_BUCKET }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          VERSION_TAG: ${{ needs.get-version-tag.outputs.tag }}
          WORKSPACE_PATH: packages/applications/blog
          APP_NAME: blog

  build-documentation:
    needs: get-version-tag
    name: build docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/actions/build-frontend
        with:
          BUCKET_ID: ${{ secrets.ARTIFACTS_BUCKET }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          VERSION_TAG: ${{ needs.get-version-tag.outputs.tag }}
          WORKSPACE_PATH: packages/applications/documentation
          APP_NAME: documentation

  build-backoffice:
    needs: get-version-tag
    name: build backoffice
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          echo "VITE_API_BASE_URL=${{ secrets.API_BASE_URL }}" > packages/arithmico-backoffice/.env
      - uses: ./.github/workflows/actions/build-frontend
        with:
          BUCKET_ID: ${{ secrets.ARTIFACTS_BUCKET }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          VERSION_TAG: ${{ needs.get-version-tag.outputs.tag }}
          WORKSPACE_PATH: packages/applications/backoffice
          APP_NAME: backoffice

  build-calculator:
    needs: get-version-tag
    name: build calculator
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/actions/build-frontend
        with:
          BUCKET_ID: ${{ secrets.ARTIFACTS_BUCKET }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          VERSION_TAG: ${{ needs.get-version-tag.outputs.tag }}
          WORKSPACE_PATH: packages/applications/calculator
          APP_NAME: calculator
