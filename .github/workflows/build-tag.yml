on:
  push:
    tags:
      - "v[0-9]*.[0-9]*.[0-9]*"
  workflow_dispatch: {}

name: build and upload

env:
  CI: true

jobs:
  test-all:
    runs-on: ubuntu-latest
    name: test all packages
    steps:
      - uses: actions/checkout@v3
        name: checkout

      - name: install dependencies
        shell: bash
        run: |
          npm ci

      - name: test all packages
        shell: bash
        run: |
          npm run test -ws

  get-version-tag:
    needs: test-all
    runs-on: ubuntu-latest
    name: get version tag
    outputs:
      tag: ${{ steps.get-tag.outputs.tag }}
    steps:
      - name: parse git ref to tag
        id: get-tag
        shell: bash
        run: |
          TAG="${GITHUB_REF/refs\/tags\//""}"
          TAG="${TAG/refs\/heads\//""}"
          export TAG="${TAG/\//_}"
          echo "Tag is $TAG"
          echo "tag=$TAG" >> $GITHUB_OUTPUT

  build-api:
    needs: get-version-tag
    runs-on: ubuntu-latest
    name: build api
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: eu-central-1
    steps:
      - uses: actions/checkout@v3
        name: checkout

      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: login to amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: build, tag, and push docker image to amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: arithmico-api
          IMAGE_TAG: ${{ needs.get-version-tag.outputs.tag }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -f ./Dockerfile.api .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

  build-blog:
    needs: get-version-tag
    name: build blog
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/actions/build-frontend
        with:
          BUCKET_ID: ${{ secrets.ARTIFACTS_BUCKET }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          VERSION_TAG: ${{ needs.get-version-tag.outputs.tag }}
          WORKSPACE_PATH: packages/arithmico-blog
          APP_NAME: blog

  build-docs:
    needs: get-version-tag
    name: build docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/actions/build-frontend
        with:
          BUCKET_ID: ${{ secrets.ARTIFACTS_BUCKET }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          VERSION_TAG: ${{ needs.get-version-tag.outputs.tag }}
          WORKSPACE_PATH: packages/arithmico-docs
          APP_NAME: docs

  build-backoffice:
    needs: get-version-tag
    name: build backoffice
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          echo "VITE_API_BASE_URL=${{ secrets.API_BASE_URL }}" > packages/arithmico-backoffice/.env
      - uses: ./.github/workflows/actions/build-frontend
        with:
          BUCKET_ID: ${{ secrets.ARTIFACTS_BUCKET }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          VERSION_TAG: ${{ needs.get-version-tag.outputs.tag }}
          WORKSPACE_PATH: packages/arithmico-backoffice
          APP_NAME: backoffice

  build-calc:
    needs: get-version-tag
    name: build calc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/actions/build-frontend
        with:
          BUCKET_ID: ${{ secrets.ARTIFACTS_BUCKET }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          VERSION_TAG: ${{ needs.get-version-tag.outputs.tag }}
          WORKSPACE_PATH: packages/arithmico-calc
          APP_NAME: calc

  build-offline-calc:
    needs: get-version-tag
    name: build offline calc
    runs-on: ubuntu-22.04
    env:
      CI: "true"
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"

      - name: install dependencies
        run: |
          npm ci

      - name: build engine with full features
        shell: bash
        run: npm run build:full-features -w @arithmico/engine

      - name: build app
        shell: bash
        run: npm run build -w @arithmico/calc

      - name: copy files
        shell: bash
        run: cp -r packages/arithmico-calc/dist packages/arithmico-desktop/web-dist

      - name: install wine
        shell: bash
        run: |
          sudo apt-get install wine-stable
          sudo dpkg --add-architecture i386 && sudo apt-get update && sudo apt-get install wine32

      - name: build electron app
        shell: bash
        run: |
          cd packages/arithmico-desktop
          npm ci
          npm run make -- --platform win32

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Deploy static site to S3 bucket
        env:
          BUCKET_ID: ${{ secrets.ARTIFACTS_BUCKET }}
          VERSION_TAG: ${{ needs.get-version-tag.outputs.tag }}
        shell: bash
        run: aws s3 sync ./packages/arithmico-desktop/out/make/squirrel.windows/x64 s3://$(echo $BUCKET_ID)/$(echo $VERSION_TAG)/arithmico-desktop --delete
